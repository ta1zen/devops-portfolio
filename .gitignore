
*$py.class
404: Not Found
.abstra/
# Abstra
# Abstra is an AI-powered process automation framework.
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
# ActiveMQ
activemq-data/
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  and can be added to the global gitignore or merged into this file. However, if you prefer,
*.aof
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
bower_components
# Bower dependency directory (https://bower.io/)
build/
build/Release
# Byte-compiled / optimized / DLL files
.cache
.cache/
celerybeat.pid
celerybeat-schedule
# Celery stuff
# C extensions
# Comment in the public line in if your project uses Gatsby and not Next.js
#   commonly ignored for libraries.
# Compiled binary addons (https://nodejs.org/api/addons.html)
*.cover
cover/
.coverage
.coverage.*
coverage
# Coverage directory used by tools like istanbul
coverage.xml
cython_debug/
# Cython debug symbols
db.sqlite3
db.sqlite3-journal
# Dependency directories
develop-eggs/
# Diagnostic reports (https://nodejs.org/api/report.html)
# Directory for instrumented libs generated by jscoverage/JSCover
dist
dist/
# Distribution / packaging
# Django stuff:
.dmypy.json
dmypy.json
docs/_build/
.docusaurus
# Docusaurus cache and generated files
# dotenv environment variable files
downloads/
.dynamodb/
# DynamoDB Local files
*.egg
*.egg-info/
.eggs/
eggs/
.env
.env.*
env/
ENV/
env.bak/
!.env.example
# Environments
.envrc
.eslintcache
.firebase/
# Firebase cache directory
# Flask stuff:
#   For a library or package, you might want to ignore these files since the code is
.fusebox/
# FuseBox cache
# Gatsby files
.grunt
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
htmlcov/
# https://nextjs.org/blog/next-9-1#public-directory-support
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
.hypothesis/
#.idea/
# Ignore directories containing user credentials, local state, and settings.
#   install all needed dependencies.
.installed.cfg
# Installer logs
instance/
#   intended to run in multiple environments; otherwise, check them in:
#   in the .venv directory. It is recommended not to include this directory in version control.
.ipynb_checkpoints
# IPython
ipython_config.py
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
jspm_packages/
# Jupyter Notebook
*.lcov
# Learn more at https://abstra.io/docs
lerna-debug.log*
lib/
lib64/
lib-cov
local_settings.py
.lock-wscript
*.log
logs
# Logs
*.manifest
MANIFEST
__marimo__/
# Marimo
marimo/_lsp/
marimo/_static/
# mkdocs documentation
mnesia/
*.mo
# mypy
.mypy_cache/
.next
# Next.js build output
node_modules/
.node_repl_history
# node-waf configuration
nosetests.xml
.nox/
.npm
npm-debug.log*
.nuxt
# Nuxt.js build / generate output
.nyc_output
# nyc test coverage
# Optional eslint cache
# Optional npm cache directory
# Optional REPL history
# Optional stylelint cache
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
out
.output
# Output of 'npm pack'
# parcel-bundler cache (https://parceljs.org/)
.parcel-cache
parts/
# pdm
.pdm-build/
#pdm.lock
.pdm-python
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#pdm.toml
# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
*.pid
*.pid.lock
pids
pip-delete-this-directory.txt
# pipenv
#Pipfile.lock
pip-log.txt
# pixi
.pixi
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#pixi.lock
.pnp.*
# poetry
#poetry.lock
#poetry.toml
*.pot
profile_default/
# public
.pybuilder/
# PyBuilder
__pycache__/
# PyCharm
*.py[codz]
*.py.cover
# pyenv
# PyInstaller
__pypackages__/
# PyPI configuration file
.pypirc
.pyre/
# Pyre type checker
.pytest_cache/
.Python
# .python-version
.pytype/
# pytype static type analyzer
rabbitmq/
# RabbitMQ
rabbitmq-data/
*.rdb
# Redis
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
.ropeproject
# Rope project settings
.ruff_cache/
# Ruff stuff:
# Runtime data
# SageMath parsed files
*.sage.py
.scrapy
# Scrapy stuff:
sdist/
*.seed
.serverless/
# Serverless directories
share/python-wheels/
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
/site
# Snowpack dependency directory (https://snowpack.dev/)
*.so
*.spec
# Sphinx documentation
.spyderproject
# Spyder project settings
.spyproject
# Stores VSCode versions used for testing VSCode extensions
# Streamlit
.streamlit/secrets.toml
.stylelintcache
.svelte-kit/
# Sveltekit cache directory
target/
.temp
# TernJS port file
.tern-port
*.tgz
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#   This is especially recommended for binary packages to ensure reproducibility, and is more
.tox/
# Translations
*.tsbuildinfo
# TypeScript cache
# Unit test / coverage reports
#  Usually these files are written by a python script from a template
# UV
#uv.lock
var/
.venv
venv/
venv.bak/
# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore
.vite/
vite.config.js.timestamp-*
vite.config.ts.timestamp-*
# Vite files
# vitepress build output
**/.vitepress/cache
# vitepress cache directory
**/.vitepress/dist
# .vscode/
.vscode-test
# vuepress build output
.vuepress/dist
# vuepress v2.x temp and cache directory
.webassets-cache
web_modules/
wheels/
.yarn/*
yarn-debug.log*
yarn-error.log*
.yarn-integrity
# Yarn Integrity file
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
# yarn v3
!.yarn/versions
#  you could uncomment the following to ignore the entire vscode folder

# System files
.DS_Store
Thumbs.db
